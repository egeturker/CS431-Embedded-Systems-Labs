C51 COMPILER V9.60.0.0   HW2                                                               10/26/2021 13:53:54 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE HW2
OBJECT MODULE PLACED IN .\Objects\hw2.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE hw2.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\hw2.l
                    -st) TABS(2) OBJECT(.\Objects\hw2.obj)

line level    source

   1          #include "reg51.h"
   2          #include "stdio.h"
   3          #include "inttypes.h"
   4          #include <string.h>
   5          
   6          sbit col2 = P0^6;
   7          sbit col1 = P0^5;
   8          sbit col0 = P0^4;
   9          sbit row3 = P0^3;
  10          sbit row2 = P0^2;
  11          sbit row1 = P0^1;
  12          sbit row0 = P0^0;
  13          
  14          sbit DB7 = P1^7;
  15          sbit DB6 = P1^6;
  16          sbit DB5 = P1^5;
  17          sbit DB4 = P1^4;
  18          sbit RS = P1^3;
  19          sbit E = P1^2;
  20          
  21          sbit clear = P2^4;
  22          sbit ret = P2^5;          
  23          sbit left = P2^6;
  24          sbit right = P2^7;
  25          
  26          char lcd_string[4] = "";
  27          char lcd_string2[16] = "";
  28          int flag = 0;
  29          
  30          void delay10ms(){
  31   1        TMOD = 0x01; /* timer 0, mode1 */
  32   1        TH0 = 0xB8; /* TH0 AND TL0 creates an overflow every 10 milliseconds*/
  33   1        TL0 = 0x01;
  34   1        TR0 = 1; /* timer 0 run*/
  35   1        
  36   1        while(TF0 == 0);
  37   1        TF0 = 0;
  38   1        TR0 = 0; /* timer 1 stop*/
  39   1      }
  40          
  41          void delay_custom(uint8_t delay_seconds){
  42   1        uint8_t loop_count = delay_seconds ;
  43   1        uint8_t i = 0;
  44   1        while(i < loop_count * 50){
  45   2          delay10ms();
  46   2          i++;
  47   2        }
  48   1      }
  49          
  50          
  51          
  52          void decode(){  
  53   1      
  54   1          char key = '-';
C51 COMPILER V9.60.0.0   HW2                                                               10/26/2021 13:53:54 PAGE 2   

  55   1            
  56   1          col0 = 1;
  57   1          col1 = 1;
  58   1          col2 = 1;
  59   1          row0 = 1;
  60   1          row1 = 1;
  61   1          row2 = 1;
  62   1          row3 = 1;
  63   1        
  64   1        
  65   1        
  66   1          row0 = 0;
  67   1          if(col0 == 0)
  68   1            key = '#';
  69   1          else if(col1 == 0)    
  70   1            key = '0';
  71   1          else if(col2 == 0)
  72   1            key = '*';
  73   1          
  74   1          row0 = 1;
  75   1          row1 = 0;
  76   1          if(col0 == 0)
  77   1            key = '9';
  78   1          else if(col1 == 0)    
  79   1            key = '8';
  80   1          else if(col2 == 0)
  81   1            key = '7';
  82   1      
  83   1          row1 = 1;
  84   1          row2 = 0;
  85   1          if(col0 == 0)
  86   1            key = '6';
  87   1          else if(col1 == 0)    
  88   1            key = '5';
  89   1          else if(col2 == 0)
  90   1            key = '4';    
  91   1          
  92   1          row2 = 1;
  93   1          row3 = 0;
  94   1          if(col0 == 0)
  95   1            key = '3';
  96   1          else if(col1 == 0)    
  97   1            key = '2';
  98   1          else if(col2 == 0)
  99   1            key = '1';
 100   1          
 101   1          row3 = 1;
 102   1          if(key != '-'){
 103   2            strcat(lcd_string, &key); 
 104   2            delay10ms();
 105   2            delay10ms();
 106   2          }
 107   1      
 108   1      
 109   1      }
 110          
 111          void uart(){
 112   1        
 113   1          uint8_t uart_input;
 114   1          
 115   1          if(RI == 1){
 116   2            uart_input = SBUF;
C51 COMPILER V9.60.0.0   HW2                                                               10/26/2021 13:53:54 PAGE 3   

 117   2            strcat(lcd_string2, &uart_input); 
 118   2            RI = 0;
 119   2            SBUF = uart_input;
 120   2            TI = 0;
 121   2          }
 122   1      }
 123          
 124          bit getBit(char c, char bitNumber) {
 125   1        return (c >> bitNumber) & 1;
 126   1      }
 127          
 128          void returnHome(void) {
 129   1        RS = 0;
 130   1        DB7 = 0;
 131   1        DB6 = 0;
 132   1        DB5 = 0;
 133   1        DB4 = 0;
 134   1        E = 1;
 135   1        E = 0;
 136   1        DB5 = 1;
 137   1        E = 1;
 138   1        E = 0;
 139   1        delay10ms();
 140   1      } 
 141          
 142          void entryModeSet(bit id, bit s) {
 143   1        RS = 0;
 144   1        DB7 = 0;
 145   1        DB6 = 0;
 146   1        DB5 = 0;
 147   1        DB4 = 0;
 148   1        E = 1;
 149   1        E = 0;
 150   1        DB6 = 1;
 151   1        DB5 = id;
 152   1        DB4 = s;
 153   1        E = 1;
 154   1        E = 0;
 155   1        delay10ms();
 156   1      }
 157          
 158          void displayOnOffControl(bit display, bit cursor, bit blinking) {
 159   1        DB7 = 0;
 160   1        DB6 = 0;
 161   1        DB5 = 0;
 162   1        DB4 = 0;
 163   1        E = 1;
 164   1        E = 0;
 165   1        DB7 = 1;
 166   1        DB6 = display;
 167   1        DB5 = cursor;
 168   1        DB4 = blinking;
 169   1        E = 1;
 170   1        E = 0;
 171   1        delay10ms();
 172   1      }
 173          
 174          void cursorOrDisplayShift(bit sc, bit rl) {
 175   1        RS = 0;
 176   1        DB7 = 0;
 177   1        DB6 = 0;
 178   1        DB5 = 0;
C51 COMPILER V9.60.0.0   HW2                                                               10/26/2021 13:53:54 PAGE 4   

 179   1        DB4 = 1;
 180   1        E = 1;
 181   1        E = 0;
 182   1        DB7 = sc;
 183   1        DB6 = rl;
 184   1        E = 1;
 185   1        E = 0;
 186   1        delay10ms();
 187   1      }
 188          
 189          void functionSet(void) {
 190   1        // The high nibble for the function set is actually sent twice. Why? See 4-bit operation
 191   1        // on pages 39 and 42 of HD44780.pdf.
 192   1        DB7 = 0;
 193   1        DB6 = 0;
 194   1        DB5 = 1;
 195   1        DB4 = 0;
 196   1        RS = 0;
 197   1        E = 1;
 198   1        E = 0;
 199   1        delay10ms();
 200   1        E = 1;
 201   1        E = 0;
 202   1        DB7 = 1;
 203   1        E = 1;
 204   1        E = 0;
 205   1        delay10ms();
 206   1      }
 207          
 208          void sendChar(char c) {
 209   1        DB7 = getBit(c, 7);
 210   1        DB6 = getBit(c, 6);
 211   1        DB5 = getBit(c, 5);
 212   1        DB4 = getBit(c, 4);
 213   1        RS = 1;
 214   1        E = 1;
 215   1        E = 0;
 216   1        DB7 = getBit(c, 3);
 217   1        DB6 = getBit(c, 2);
 218   1        DB5 = getBit(c, 1);
 219   1        DB4 = getBit(c, 0);
 220   1        E = 1;
 221   1        E = 0;
 222   1        delay10ms();
 223   1      }
 224          
 225          void sendString(char* str) {
 226   1        int index = 0;
 227   1        while (str[index] != 0) {
 228   2          sendChar(str[index]);
 229   2          index++;
 230   2        }
 231   1      }
 232          
 233          void setDdRamAddress(char address) {
 234   1        RS = 0;
 235   1        DB7 = 1;
 236   1        DB6 = getBit(address, 6);
 237   1        DB5 = getBit(address, 5);
 238   1        DB4 = getBit(address, 4);
 239   1        E = 1;
 240   1        E = 0;
C51 COMPILER V9.60.0.0   HW2                                                               10/26/2021 13:53:54 PAGE 5   

 241   1        DB7 = getBit(address, 3);
 242   1        DB6 = getBit(address, 2);
 243   1        DB5 = getBit(address, 1);
 244   1        DB4 = getBit(address, 0);
 245   1        E = 1;
 246   1        E = 0;
 247   1        delay10ms();
 248   1      }
 249          
 250          
 251          
 252          unsigned char display_on_led(unsigned int i){
 253   1        unsigned char led;
 254   1        switch(i){
 255   2          case 0:
 256   2            led = 0xc0;
 257   2            break;
 258   2          case 1:
 259   2            led = 0xf9;
 260   2            break;
 261   2          case 2:
 262   2            led = 0xa4;
 263   2            break;
 264   2          case 3:
 265   2            led = 0xb0;
 266   2            break;
 267   2          case 4:
 268   2            led = 0x99;
 269   2            break;
 270   2          case 5:
 271   2            led = 0x92;
 272   2            break;
 273   2          case 6:
 274   2            led = 0x82;
 275   2            break;
 276   2          case 7:
 277   2            led = 0xf8;
 278   2            break;
 279   2          case 8:
 280   2            led = 0x80;
 281   2            break;
 282   2          case 9: 
 283   2            led = 0x90;   
 284   2            break;
 285   2          default:
 286   2            led = 0x00;
 287   2        }
 288   1          
 289   1          return led;
 290   1      }
 291          
 292          void main (void)
 293          {
 294   1      
 295   1        
 296   1        
 297   1        
 298   1        functionSet();
 299   1        entryModeSet(1, 0); // increment and no shift
 300   1        displayOnOffControl(1, 0, 0); // display on, cursor on and blinking on
 301   1        
 302   1        SCON  = 0x50;                   // UART mode 1  
C51 COMPILER V9.60.0.0   HW2                                                               10/26/2021 13:53:54 PAGE 6   

 303   1        TMOD |= 0x20;                   // timer 1 mode 2     
 304   1        TH1   = 0xfd;                   // 19200 baud  22.118 mhz clock      
 305   1        TR1   = 1;                      // timer 1 run                        
 306   1        TI    = 1;                      // UART receive first character
 307   1      
 308   1      while(1)
 309   1        {
 310   2          uart();   
 311   2          decode();
 312   2          
 313   2          if(strlen(lcd_string) == 3 && flag == 0){
 314   3            sendString(lcd_string);
 315   3            flag = 1;
 316   3            
 317   3            setDdRamAddress(0x40); // set address to start of second line
 318   3            sendString(lcd_string2);
 319   3          }
 320   2      
 321   2          
 322   2      
 323   2        }
 324   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    693    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       7
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
